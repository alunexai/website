---
interface Props {
  type: HTMLInputElement['type'];
  options: {label: string; value: string}[];
  className?: string;
  label?: string;
  id?: string;
  name?: string;
  required?: boolean;
}

const {type, className, label, id, required, name, options} =
  Astro.props as Props;
---

<div class="select-wrapper">
  {
    label && (
      <label class="text-color-main" for={id}>
        {label}
        {required && <span class="asterisk">*</span>}
      </label>
    )
  }
  <select
    id={id}
    name={name}
    class={`
    appearance-none
    bg-color-gray-100
    border-[1px]
    border-color-gray-50
    rounded-[16px]
    px-[16px]
    py-[14px]
    text-color-main
    font-medium
    leading-[20px]
    text-h7
    hover:border-color-description
    hover:cursor-pointer
    focus-visible:border-color-main
    outline-none
    ${className ?? ''}
   `}
    >{
      options.map(({label, value}) => (
        <option selected={value === 'USA'} value={value}>
          {label}
        </option>
      ))
    }</select
  >
</div>

<style>
  .select-wrapper {
    position: relative;
  }

  .select-wrapper::after {
    content: 'â–¼';
    font-size: 14px;
    top: 42px;
    right: 20px;
    position: absolute;
    color: #fff;
  }
</style>
