---
type AccordionItem = {
  title: string;
  content: string;
};

const {title, content} = Astro.props as AccordionItem;

const controlId = 'accordionControl';
const contentId = 'accordionContent';
---

<div class="accordion flex w-full flex-col">
  <div class="flex w-full justify-between items-center">
    <p class="text-text-main text-h4">{title}</p>

    <button
      id={controlId}
      class="accordion-button transition-transform text-text-description text-h2 font-semibold rotate-0"
      aria-expanded="false"
    >
      +
    </button>
  </div>

  <div
    id={contentId}
    class="accordion-content overflow-hidden transition-max-height duration-700 ease-in-out max-h-0"
  >
    <p class="text-text-description font-medium text-h5">{content}</p>
  </div>
</div>

<script>
  document.querySelectorAll('.accordion').forEach(accordion => {
    const button = accordion.querySelector('.accordion-button');
    const content = accordion.querySelector('.accordion-content');

    button.addEventListener('click', () => {
      const isExpanded = button.getAttribute('aria-expanded') === 'true';
      button.setAttribute('aria-expanded', String(!isExpanded));
      if (isExpanded) {
        content.style.maxHeight = '0';
        button.classList.remove('rotate-180');
      } else {
        content.style.maxHeight = content.scrollHeight + 'px';
        button.classList.add('rotate-180');
      }
    });
  });
</script>
