---
import Chevron from '@assets/Chevron.astro';

type AccordionItem = {
  title: string;
  content: string;
};

const {title, content} = Astro.props as AccordionItem;

const controlId = 'accordionControl';
const contentId = 'accordionContent';
---

<div
  class="accordion flex w-full flex-col p-[16px] rounded-[16px] bg-bg-tertiary"
>
  <div class="flex w-full justify-between items-center py-[6px]">
    <p
      class="text-color-main text-h7 leading-[20px] lg:text-h5 lg:leading-[25px] font-medium"
    >
      {title}
    </p>

    <button
      id={controlId}
      class="accordion-button transition-transform text-color-gray-50 rotate-0"
      aria-expanded="false"
    >
      <Chevron />
    </button>
  </div>

  <div
    id={contentId}
    class="accordion-content overflow-hidden transition-max-height duration-700 ease-in-out max-h-0"
  >
    <p
      class="text-color-description font-medium text-h8 leading-[16px] lg:text-h7 lg:leading-[20px]"
    >
      {content}
    </p>
  </div>
</div>

<script>
  document.querySelectorAll('.accordion').forEach(accordion => {
    const button = accordion.querySelector('.accordion-button');
    const content = accordion.querySelector('.accordion-content');

    button.addEventListener('click', () => {
      const isExpanded = button.getAttribute('aria-expanded') === 'true';
      button.setAttribute('aria-expanded', String(!isExpanded));
      if (isExpanded) {
        content.style.maxHeight = '0';
        button.classList.remove('rotate-180');
      } else {
        content.style.maxHeight = content.scrollHeight + 'px';
        button.classList.add('rotate-180');
      }
    });
  });
</script>
